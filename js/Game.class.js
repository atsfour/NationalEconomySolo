// Generated by CoffeeScript 1.9.3
var FormSpace, HandSpace, LogSpace, PrivateSpace, PublicSpace, SpaceBase,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.Game = (function() {
  function Game() {}

  Game.objs = {
    "public": null,
    "private": null,
    hand: null,
    log: null,
    form: null
  };

  Game.isSetObj = false;

  Game.init = function() {
    var name, obj, ref, results;
    this.setObj();
    ref = this.objs;
    results = [];
    for (name in ref) {
      obj = ref[name];
      results.push(obj.init());
    }
    return results;
  };

  Game.setObj = function() {
    if (this.isSetObj) {
      return;
    }
    this.isSetObj = true;
    this.objs["public"] = PublicSpace;
    this.objs["private"] = PrivateSpace;
    this.objs.hand = HandSpace;
    this.objs.log = LogSpace;
    return this.objs.form = FormSpace;
  };

  return Game;

})();

SpaceBase = (function() {
  function SpaceBase() {}

  SpaceBase.DIV_ID = null;

  SpaceBase.init = function() {
    var e;
    e = this.getElement();
    return e.html(this.DIV_ID);
  };

  SpaceBase.getElement = function() {
    return $('#' + this.DIV_ID);
  };

  return SpaceBase;

})();

PublicSpace = (function(superClass) {
  extend(PublicSpace, superClass);

  function PublicSpace() {
    return PublicSpace.__super__.constructor.apply(this, arguments);
  }

  PublicSpace.DIV_ID = "public";

  PublicSpace.prototype.cards = {};

  PublicSpace.init = function() {
    PublicSpace.__super__.constructor.init.call(this);
    return this.cards = {};
  };

  PublicSpace.insert = function(cardObj) {};

  return PublicSpace;

})(SpaceBase);

PrivateSpace = (function(superClass) {
  extend(PrivateSpace, superClass);

  function PrivateSpace() {
    return PrivateSpace.__super__.constructor.apply(this, arguments);
  }

  PrivateSpace.DIV_ID = "private";

  PrivateSpace.prototype.cards = {};

  PrivateSpace.init = function() {
    return PrivateSpace.__super__.constructor.init.call(this);
  };

  return PrivateSpace;

})(SpaceBase);

LogSpace = (function(superClass) {
  extend(LogSpace, superClass);

  function LogSpace() {
    return LogSpace.__super__.constructor.apply(this, arguments);
  }

  LogSpace.DIV_ID = "log";

  LogSpace.init = function() {
    return LogSpace.__super__.constructor.init.call(this);
  };

  return LogSpace;

})(SpaceBase);

FormSpace = (function(superClass) {
  extend(FormSpace, superClass);

  function FormSpace() {
    return FormSpace.__super__.constructor.apply(this, arguments);
  }

  FormSpace.DIV_ID = "form";

  FormSpace.init = function() {
    return FormSpace.__super__.constructor.init.call(this);
  };

  return FormSpace;

})(SpaceBase);

HandSpace = (function(superClass) {
  extend(HandSpace, superClass);

  function HandSpace() {
    return HandSpace.__super__.constructor.apply(this, arguments);
  }

  HandSpace.DIV_ID = "hand";

  HandSpace.init = function() {
    return HandSpace.__super__.constructor.init.call(this);
  };

  return HandSpace;

})(SpaceBase);

// Generated by CoffeeScript 1.9.3
var Card, Card10, Card11, Card12, Card13, Card14, Card15, Card16, Card17, Card18, Card19, Card2, Card20, Card21, Card22, Card23, Card24, Card25, Card26, Card27, Card28, Card29, Card3, Card30, Card31, Card32, Card33, Card34, Card35, Card36, Card4, Card5, Card6, Card7, Card8, Card9, Card99, CardBase,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Card = (function() {
  function Card() {}

  Card.getClass = function(classNum) {
    var res;
    try {
      res = eval("Card" + classNum);
    } catch (_error) {
      return false;
    }
    if (res == null) {
      return false;
    }
    return res;
  };

  return Card;

})();

CardBase = (function() {
  function CardBase() {}

  CardBase.NAME = null;

  CardBase.CATEGORY = null;

  CardBase.DESCRIPTION = null;

  CardBase.COST = 0;

  CardBase.PRICE = 0;

  CardBase.getName = function() {
    return this.NAME;
  };

  CardBase.getCategory = function() {
    return this.CATEGORY;
  };

  CardBase.getNumber = function() {
    var res;
    res = this.name.match(/^Card(\d+)$/);
    if (res != null) {
      return Number(res[1]);
    }
    return false;
  };

  CardBase.getDescription = function() {
    return this.DESCRIPTION;
  };

  CardBase.isPublicOnly = function() {
    return this.CATEGORY === '公共';
  };

  CardBase.isWorkable = function() {
    if (this.CATEGORY === '非職場') {
      return false;
    }
    if (this.CATEGORY === '消費財') {
      return false;
    }
    return true;
  };

  CardBase.isSellable = function() {
    return this.isWorkable();
  };

  CardBase.getCost = function() {
    return this.COST;
  };

  CardBase.getPrice = function() {
    return this.PRICE;
  };

  CardBase.getPoint = function() {
    return this.PRICE * 2;
  };

  CardBase.getImagePath = function() {
    return './img/card/' + this.getNumber() + '.jpg';
  };

  CardBase.getImageObj = function() {
    return $('<img>').attr('src', this.getImagePath());
  };

  return CardBase;

})();

Card2 = (function(superClass) {
  extend(Card2, superClass);

  function Card2() {
    return Card2.__super__.constructor.apply(this, arguments);
  }

  Card2.NAME = "鉱山";

  Card2.CATEGORY = "公共";

  Card2.DESCRIPTION = "カードを1枚引く";

  return Card2;

})(CardBase);

Card3 = (function(superClass) {
  extend(Card3, superClass);

  function Card3() {
    return Card3.__super__.constructor.apply(this, arguments);
  }

  Card3.NAME = "学校";

  Card3.CATEGORY = "公共";

  Card3.DESCRIPTION = "労働者を1人増やす";

  return Card3;

})(CardBase);

Card4 = (function(superClass) {
  extend(Card4, superClass);

  function Card4() {
    return Card4.__super__.constructor.apply(this, arguments);
  }

  Card4.NAME = "大工";

  Card4.CATEGORY = "公共";

  Card4.DESCRIPTION = "建物を1つ作る";

  return Card4;

})(CardBase);

Card5 = (function(superClass) {
  extend(Card5, superClass);

  function Card5() {
    return Card5.__super__.constructor.apply(this, arguments);
  }

  Card5.NAME = "露店";

  Card5.CATEGORY = "公共";

  Card5.DESCRIPTION = "手札を1枚捨てる\n家計から$6を得る";

  return Card5;

})(CardBase);

Card6 = (function(superClass) {
  extend(Card6, superClass);

  function Card6() {
    return Card6.__super__.constructor.apply(this, arguments);
  }

  Card6.NAME = "市場";

  Card6.CATEGORY = "公共";

  Card6.DESCRIPTION = "手札を2枚捨てる\n家計から$12を得る";

  return Card6;

})(CardBase);

Card7 = (function(superClass) {
  extend(Card7, superClass);

  function Card7() {
    return Card7.__super__.constructor.apply(this, arguments);
  }

  Card7.NAME = "高等学校";

  Card7.CATEGORY = "公共";

  Card7.DESCRIPTION = "労働者を4人に増やす";

  return Card7;

})(CardBase);

Card8 = (function(superClass) {
  extend(Card8, superClass);

  function Card8() {
    return Card8.__super__.constructor.apply(this, arguments);
  }

  Card8.NAME = "スーパーマーケット";

  Card8.CATEGORY = "公共";

  Card8.DESCRIPTION = "手札を3枚捨てて家計から$18を得る";

  return Card8;

})(CardBase);

Card9 = (function(superClass) {
  extend(Card9, superClass);

  function Card9() {
    return Card9.__super__.constructor.apply(this, arguments);
  }

  Card9.NAME = "大学";

  Card9.CATEGORY = "公共";

  Card9.DESCRIPTION = "労働者を5人に増やす";

  return Card9;

})(CardBase);

Card10 = (function(superClass) {
  extend(Card10, superClass);

  function Card10() {
    return Card10.__super__.constructor.apply(this, arguments);
  }

  Card10.NAME = "百貨店";

  Card10.CATEGORY = "公共";

  Card10.DESCRIPTION = "手札を4枚捨てて家計から$24を得る";

  return Card10;

})(CardBase);

Card11 = (function(superClass) {
  extend(Card11, superClass);

  function Card11() {
    return Card11.__super__.constructor.apply(this, arguments);
  }

  Card11.NAME = "専門学校";

  Card11.CATEGORY = "公共";

  Card11.DESCRIPTION = "労働者を1人増やす\nこのラウンドからすぐ働ける";

  return Card11;

})(CardBase);

Card12 = (function(superClass) {
  extend(Card12, superClass);

  function Card12() {
    return Card12.__super__.constructor.apply(this, arguments);
  }

  Card12.NAME = "万博";

  Card12.CATEGORY = "公共";

  Card12.DESCRIPTION = "手札を5枚捨てて家計から$30を得る";

  return Card12;

})(CardBase);

Card13 = (function(superClass) {
  extend(Card13, superClass);

  function Card13() {
    return Card13.__super__.constructor.apply(this, arguments);
  }

  Card13.NAME = "農場";

  Card13.CATEGORY = "農業";

  Card13.DESCRIPTION = "消費財を2枚引く";

  Card13.COST = 1;

  Card13.PRICE = 3;

  return Card13;

})(CardBase);

Card14 = (function(superClass) {
  extend(Card14, superClass);

  function Card14() {
    return Card14.__super__.constructor.apply(this, arguments);
  }

  Card14.NAME = "設計事務所";

  Card14.DESCRIPTION = "カードを5枚めくり公開する\nうち1枚を引いて残りを捨てる";

  Card14.COST = 1;

  Card14.PRICE = 4;

  return Card14;

})(CardBase);

Card15 = (function(superClass) {
  extend(Card15, superClass);

  function Card15() {
    return Card15.__super__.constructor.apply(this, arguments);
  }

  Card15.NAME = "焼畑";

  Card15.CATEGORY = "農業";

  Card15.DESCRIPTION = "消費財を5枚引く\n焼畑は消滅する";

  Card15.COST = 1;

  Card15.PRICE = 0;

  return Card15;

})(CardBase);

Card16 = (function(superClass) {
  extend(Card16, superClass);

  function Card16() {
    return Card16.__super__.constructor.apply(this, arguments);
  }

  Card16.NAME = "珈琲店";

  Card16.DESCRIPTION = "家計から$5を得る";

  Card16.COST = 1;

  Card16.PRICE = 4;

  return Card16;

})(CardBase);

Card17 = (function(superClass) {
  extend(Card17, superClass);

  function Card17() {
    return Card17.__super__.constructor.apply(this, arguments);
  }

  Card17.NAME = "工場";

  Card17.CATEGORY = "工業";

  Card17.DESCRIPTION = "手札を2枚捨てる\nカードを4枚引く";

  Card17.COST = 2;

  Card17.PRICE = 6;

  return Card17;

})(CardBase);

Card18 = (function(superClass) {
  extend(Card18, superClass);

  function Card18() {
    return Card18.__super__.constructor.apply(this, arguments);
  }

  Card18.NAME = "建設会社";

  Card18.DESCRIPTION = "建物を1つコスト-1で作る\n";

  Card18.COST = 2;

  Card18.PRICE = 5;

  return Card18;

})(CardBase);

Card19 = (function(superClass) {
  extend(Card19, superClass);

  function Card19() {
    return Card19.__super__.constructor.apply(this, arguments);
  }

  Card19.NAME = "果樹園";

  Card19.CATEGORY = "農業";

  Card19.DESCRIPTION = "手札を2枚捨てる\nカードを4枚引く";

  Card19.COST = 2;

  Card19.PRICE = 5;

  return Card19;

})(CardBase);

Card20 = (function(superClass) {
  extend(Card20, superClass);

  function Card20() {
    return Card20.__super__.constructor.apply(this, arguments);
  }

  Card20.NAME = "倉庫";

  Card20.CATEGORY = "非職場";

  Card20.DESCRIPTION = "手札上限+4\n（所有しているだけで効果がある）\n売却不可";

  Card20.COST = 2;

  Card20.PRICE = 5;

  return Card20;

})(CardBase);

Card21 = (function(superClass) {
  extend(Card21, superClass);

  function Card21() {
    return Card21.__super__.constructor.apply(this, arguments);
  }

  Card21.NAME = "社宅";

  Card21.CATEGORY = "非職場";

  Card21.DESCRIPTION = "労働者上限+1\n（所有しているだけで効果がある）\n売却不可";

  Card21.COST = 2;

  Card21.PRICE = 4;

  return Card21;

})(CardBase);

Card22 = (function(superClass) {
  extend(Card22, superClass);

  function Card22() {
    return Card22.__super__.constructor.apply(this, arguments);
  }

  Card22.NAME = "法律事務所";

  Card22.CATEGORY = "非職場";

  Card22.DESCRIPTION = "終了時：負債から5枚まで免除する";

  Card22.COST = 2;

  Card22.PRICE = 4;

  return Card22;

})(CardBase);

Card23 = (function(superClass) {
  extend(Card23, superClass);

  function Card23() {
    return Card23.__super__.constructor.apply(this, arguments);
  }

  Card23.NAME = "大農園";

  Card23.CATEGORY = "農業";

  Card23.DESCRIPTION = "消費財を3枚引く";

  Card23.COST = 3;

  Card23.PRICE = 6;

  return Card23;

})(CardBase);

Card24 = (function(superClass) {
  extend(Card24, superClass);

  function Card24() {
    return Card24.__super__.constructor.apply(this, arguments);
  }

  Card24.NAME = "レストラン";

  Card24.DESCRIPTION = "手札を1枚捨てる\n家計から$15を得る";

  Card24.COST = 3;

  Card24.PRICE = 8;

  return Card24;

})(CardBase);

Card25 = (function(superClass) {
  extend(Card25, superClass);

  function Card25() {
    return Card25.__super__.constructor.apply(this, arguments);
  }

  Card25.NAME = "開拓民";

  Card25.DESCRIPTION = "手札の農業カテゴリの建物を1つコスト0で作る";

  Card25.COST = 3;

  Card25.PRICE = 7;

  return Card25;

})(CardBase);

Card26 = (function(superClass) {
  extend(Card26, superClass);

  function Card26() {
    return Card26.__super__.constructor.apply(this, arguments);
  }

  Card26.NAME = "不動産屋";

  Card26.CATEGORY = "非職場";

  Card26.DESCRIPTION = "終了時：所有する建物1つにつき+3点\n（この建物を含む）\n売却不可";

  Card26.COST = 3;

  Card26.PRICE = 5;

  return Card26;

})(CardBase);

Card27 = (function(superClass) {
  extend(Card27, superClass);

  function Card27() {
    return Card27.__super__.constructor.apply(this, arguments);
  }

  Card27.NAME = "農協";

  Card27.CATEGORY = "非職場";

  Card27.DESCRIPTION = "終了時：手札の消費財1枚につき+3点\n売却不可";

  Card27.COST = 3;

  Card27.PRICE = 6;

  return Card27;

})(CardBase);

Card28 = (function(superClass) {
  extend(Card28, superClass);

  function Card28() {
    return Card28.__super__.constructor.apply(this, arguments);
  }

  Card28.NAME = "製鉄所";

  Card28.CATEGORY = "工業";

  Card28.DESCRIPTION = "カードを3枚引く";

  Card28.COST = 4;

  Card28.PRICE = 10;

  return Card28;

})(CardBase);

Card29 = (function(superClass) {
  extend(Card29, superClass);

  function Card29() {
    return Card29.__super__.constructor.apply(this, arguments);
  }

  Card29.NAME = "ゼネコン";

  Card29.DESCRIPTION = "建物を1つ作る\nカードを2枚引く";

  Card29.COST = 4;

  Card29.PRICE = 9;

  return Card29;

})(CardBase);

Card30 = (function(superClass) {
  extend(Card30, superClass);

  function Card30() {
    return Card30.__super__.constructor.apply(this, arguments);
  }

  Card30.NAME = "化学工場";

  Card30.CATEGORY = "工業";

  Card30.DESCRIPTION = "カードを2枚引く\n手札がなければ4枚引く";

  Card30.COST = 4;

  Card30.PRICE = 9;

  return Card30;

})(CardBase);

Card31 = (function(superClass) {
  extend(Card31, superClass);

  function Card31() {
    return Card31.__super__.constructor.apply(this, arguments);
  }

  Card31.NAME = "労働組合";

  Card31.CATEGORY = "非職場";

  Card31.DESCRIPTION = "終了時：労働者1人につき+6点\n売却不可";

  Card31.COST = 4;

  Card31.PRICE = 0;

  return Card31;

})(CardBase);

Card32 = (function(superClass) {
  extend(Card32, superClass);

  function Card32() {
    return Card32.__super__.constructor.apply(this, arguments);
  }

  Card32.NAME = "邸宅";

  Card32.CATEGORY = "非職場";

  Card32.DESCRIPTION = "売却不可";

  Card32.COST = 4;

  Card32.PRICE = 14;

  return Card32;

})(CardBase);

Card33 = (function(superClass) {
  extend(Card33, superClass);

  function Card33() {
    return Card33.__super__.constructor.apply(this, arguments);
  }

  Card33.NAME = "自動車工場";

  Card33.CATEGORY = "工業";

  Card33.DESCRIPTION = "手札を3枚捨てる\nカードを7枚引く";

  Card33.COST = 5;

  Card33.PRICE = 12;

  return Card33;

})(CardBase);

Card34 = (function(superClass) {
  extend(Card34, superClass);

  function Card34() {
    return Card34.__super__.constructor.apply(this, arguments);
  }

  Card34.NAME = "二胡市建設";

  Card34.DESCRIPTION = "同じコストの建物を2つ作る\n1つ分のコストだけ支払う";

  Card34.COST = 5;

  Card34.PRICE = 10;

  return Card34;

})(CardBase);

Card35 = (function(superClass) {
  extend(Card35, superClass);

  function Card35() {
    return Card35.__super__.constructor.apply(this, arguments);
  }

  Card35.NAME = "鉄道";

  Card35.CATEGORY = "非職場";

  Card35.DESCRIPTION = "終了時：所有する鉱業カテゴリの建物1つにつき+3点\n売却不可";

  Card35.COST = 5;

  Card35.PRICE = 9;

  return Card35;

})(CardBase);

Card36 = (function(superClass) {
  extend(Card36, superClass);

  function Card36() {
    return Card36.__super__.constructor.apply(this, arguments);
  }

  Card36.NAME = "本社ビル";

  Card36.CATEGORY = "非職場";

  Card36.DESCRIPTION = "終了時：所有する非職場カテゴリの建物1つにつき+3点\n売却不可";

  Card36.COST = 5;

  Card36.PRICE = 10;

  return Card36;

})(CardBase);

Card99 = (function(superClass) {
  extend(Card99, superClass);

  function Card99() {
    return Card99.__super__.constructor.apply(this, arguments);
  }

  Card99.NAME = "消費財";

  Card99.CATEGORY = "消費財";

  Card99.DESCRIPTION = "手札やコストとして捨てられる";

  return Card99;

})(CardBase);
